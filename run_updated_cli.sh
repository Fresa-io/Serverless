#!/bin/bash

# Updated CLI runner that uses the current entrypoint_enhanced.sh
# This bypasses the Docker image issue

echo "🚀 Running Updated Lambda Deployment CLI"
echo "========================================"
echo ""

# Check if we're in the right directory
if [ ! -f "entrypoint_enhanced.sh" ]; then
    echo "❌ Error: entrypoint_enhanced.sh not found"
    echo "Please run this script from the Serverless directory"
    exit 1
fi

# Check if credentials are provided
if [ $# -eq 0 ]; then
    echo "Usage: ./run_updated_cli.sh <encrypted_credentials>"
    echo ""
    echo "Example:"
    echo "  ./run_updated_cli.sh YOUR_BASE64_ENCODED_CREDENTIALS"
    exit 1
fi

ENCRYPTED_CREDS="$1"

echo "🔓 Decrypting credentials..."
DECRYPTED_OUTPUT=$(python3 utils/encrypt_utils.py decrypt "$ENCRYPTED_CREDS" 2>&1)

if echo "$DECRYPTED_OUTPUT" | grep -q "Error:"; then
    echo "❌ $DECRYPTED_OUTPUT"
    echo ""
    echo "💡 Troubleshooting:"
    echo "1. Make sure you're using the exact hash generated by the 'hash' command"
    echo "2. Check that the hash hasn't been modified or truncated"
    echo "3. Try generating a new hash with: python3 utils/encrypt_utils.py hash <access_key> <secret_key> <region>"
    exit 1
fi

# Extract credentials from Python output
ACCESS_KEY=$(echo "$DECRYPTED_OUTPUT" | grep "Access Key:" | cut -d' ' -f3)
SECRET_KEY=$(echo "$DECRYPTED_OUTPUT" | grep "Secret Key:" | cut -d' ' -f3)
REGION=$(echo "$DECRYPTED_OUTPUT" | grep "Region:" | cut -d' ' -f2)

if [ -z "$ACCESS_KEY" ] || [ -z "$SECRET_KEY" ] || [ -z "$REGION" ]; then
    echo "❌ Error: Failed to extract credentials from decryption output"
    echo "Debug output: $DECRYPTED_OUTPUT"
    exit 1
fi

echo "✅ Credentials decrypted successfully"
echo "🌍 Region: $REGION"

# Configure AWS CLI
echo "⚙️  Configuring AWS CLI..."
aws configure set aws_access_key_id "$ACCESS_KEY"
aws configure set aws_secret_access_key "$SECRET_KEY"
aws configure set region "$REGION"
aws configure set output json

# Test AWS connection
echo "🔍 Testing AWS connection..."
if aws sts get-caller-identity > /dev/null 2>&1; then
    echo "✅ AWS connection successful"
    IDENTITY=$(aws sts get-caller-identity --query 'Arn' --output text)
    echo "👤 Identity: $IDENTITY"
else
    echo "❌ AWS connection failed. Please check your credentials."
    exit 1
fi

echo ""
echo "🚀 Lambda Deployment Interactive Menu (Updated Version)"
echo "======================================================"
echo ""
echo "Available Actions:"
echo "  1) 🔍 Show Deployment Status"
echo "  2) 🧪 Test Function Locally"
echo "  3) 🧪 Run Unit Tests"
echo "  4) 📋 List Test Events"
echo "  5) 🆕 Create New Lambda Function"
echo "  6) 💻 Interactive Shell"
echo "  7) ❌ Exit"
echo ""
echo "🚀 Deployment: All deployments happen via GitHub Actions CI/CD"
echo "📋 Note: Use 'menu' command in shell to return to this menu"
echo ""

# Run the updated entrypoint script
bash entrypoint_enhanced.sh deploy "$ENCRYPTED_CREDS"
